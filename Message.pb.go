// Code generated by protoc-gen-go.
// source: Message.proto
// DO NOT EDIT!

package spacecluster

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Message struct {
	Tick *uint64 `protobuf:"varint,1,req,name=Tick,json=tick" json:"Tick,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*Message_GameEvent
	//	*Message_GameHeartbeat
	//	*Message_GameObjUpdate
	//	*Message_ServerInfo
	Payload          isMessage_Payload `protobuf_oneof:"Payload"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_GameEvent struct {
	GameEvent *GameEvent `protobuf:"bytes,2,opt,name=GameEvent,json=gameEvent,oneof"`
}
type Message_GameHeartbeat struct {
	GameHeartbeat *GameHeartbeat `protobuf:"bytes,3,opt,name=GameHeartbeat,json=gameHeartbeat,oneof"`
}
type Message_GameObjUpdate struct {
	GameObjUpdate *GameObjUpdate `protobuf:"bytes,4,opt,name=GameObjUpdate,json=gameObjUpdate,oneof"`
}
type Message_ServerInfo struct {
	ServerInfo *ServerInfo `protobuf:"bytes,5,opt,name=ServerInfo,json=serverInfo,oneof"`
}

func (*Message_GameEvent) isMessage_Payload()     {}
func (*Message_GameHeartbeat) isMessage_Payload() {}
func (*Message_GameObjUpdate) isMessage_Payload() {}
func (*Message_ServerInfo) isMessage_Payload()    {}

func (m *Message) GetPayload() isMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetTick() uint64 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

func (m *Message) GetGameEvent() *GameEvent {
	if x, ok := m.GetPayload().(*Message_GameEvent); ok {
		return x.GameEvent
	}
	return nil
}

func (m *Message) GetGameHeartbeat() *GameHeartbeat {
	if x, ok := m.GetPayload().(*Message_GameHeartbeat); ok {
		return x.GameHeartbeat
	}
	return nil
}

func (m *Message) GetGameObjUpdate() *GameObjUpdate {
	if x, ok := m.GetPayload().(*Message_GameObjUpdate); ok {
		return x.GameObjUpdate
	}
	return nil
}

func (m *Message) GetServerInfo() *ServerInfo {
	if x, ok := m.GetPayload().(*Message_ServerInfo); ok {
		return x.ServerInfo
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_GameEvent)(nil),
		(*Message_GameHeartbeat)(nil),
		(*Message_GameObjUpdate)(nil),
		(*Message_ServerInfo)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// Payload
	switch x := m.Payload.(type) {
	case *Message_GameEvent:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameEvent); err != nil {
			return err
		}
	case *Message_GameHeartbeat:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameHeartbeat); err != nil {
			return err
		}
	case *Message_GameObjUpdate:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameObjUpdate); err != nil {
			return err
		}
	case *Message_ServerInfo:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ServerInfo); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.Payload has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 2: // Payload.GameEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameEvent)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_GameEvent{msg}
		return true, err
	case 3: // Payload.GameHeartbeat
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameHeartbeat)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_GameHeartbeat{msg}
		return true, err
	case 4: // Payload.GameObjUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameObjUpdate)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_GameObjUpdate{msg}
		return true, err
	case 5: // Payload.ServerInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ServerInfo)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_ServerInfo{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// Payload
	switch x := m.Payload.(type) {
	case *Message_GameEvent:
		s := proto.Size(x.GameEvent)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_GameHeartbeat:
		s := proto.Size(x.GameHeartbeat)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_GameObjUpdate:
		s := proto.Size(x.GameObjUpdate)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_ServerInfo:
		s := proto.Size(x.ServerInfo)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Message)(nil), "spacecluster.Message")
}

var fileDescriptor3 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xf5, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x29, 0x2e, 0x48, 0x4c, 0x4e,
	0x4d, 0xce, 0x29, 0x2d, 0x2e, 0x49, 0x2d, 0x92, 0xe2, 0x77, 0x4f, 0xcc, 0x4d, 0x75, 0x2d, 0x4b,
	0xcd, 0x2b, 0x81, 0x48, 0x4b, 0x09, 0x83, 0x04, 0x3c, 0x52, 0x13, 0x8b, 0x4a, 0x92, 0x52, 0x13,
	0x61, 0x82, 0x02, 0x20, 0x41, 0xff, 0xa4, 0xac, 0xd4, 0x64, 0xb8, 0x48, 0x70, 0x6a, 0x51, 0x59,
	0x6a, 0x91, 0x67, 0x5e, 0x5a, 0x3e, 0x44, 0x44, 0x69, 0x39, 0x13, 0x17, 0x3b, 0xd4, 0x26, 0x21,
	0x21, 0x2e, 0x96, 0x90, 0xcc, 0xe4, 0x6c, 0x09, 0x46, 0x05, 0x26, 0x0d, 0x96, 0x20, 0x96, 0x12,
	0x20, 0x5b, 0xc8, 0x9c, 0x8b, 0x13, 0x6e, 0x97, 0x04, 0x93, 0x02, 0xa3, 0x06, 0xb7, 0x91, 0xb8,
	0x1e, 0xb2, 0x5b, 0xf4, 0xe0, 0xd2, 0x1e, 0x0c, 0x41, 0x9c, 0xe9, 0x30, 0x8e, 0x90, 0x33, 0x17,
	0x2f, 0x8a, 0x9b, 0x24, 0x98, 0xc1, 0x9a, 0xa5, 0x31, 0x35, 0xc3, 0x95, 0x00, 0x0d, 0xe0, 0x4d,
	0x47, 0x16, 0x80, 0x19, 0x02, 0xf4, 0x43, 0x68, 0x41, 0x4a, 0x62, 0x49, 0xaa, 0x04, 0x0b, 0x2e,
	0x43, 0xe0, 0x4a, 0x60, 0x86, 0xc0, 0x05, 0x84, 0xac, 0xb8, 0xb8, 0x10, 0xde, 0x96, 0x60, 0x05,
	0x9b, 0x20, 0x81, 0x6a, 0x02, 0x42, 0x1e, 0xa8, 0x9d, 0xab, 0x18, 0xce, 0x73, 0xe2, 0xe4, 0x62,
	0x0f, 0x48, 0xac, 0xcc, 0xc9, 0x4f, 0x4c, 0x01, 0x04, 0x00, 0x00, 0xff, 0xff, 0xc5, 0xb9, 0xe4,
	0x87, 0x91, 0x01, 0x00, 0x00,
}
