// Code generated by protoc-gen-go.
// source: ServerInfo.proto
// DO NOT EDIT!

package spacecluster

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ServerInfo struct {
	ServerId            *string `protobuf:"bytes,1,req,name=ServerId,json=serverId" json:"ServerId,omitempty"`
	ServerName          *string `protobuf:"bytes,2,req,name=ServerName,json=serverName" json:"ServerName,omitempty"`
	ServerRegion        *string `protobuf:"bytes,3,req,name=ServerRegion,json=serverRegion" json:"ServerRegion,omitempty"`
	MaxPlayers          *uint32 `protobuf:"varint,4,req,name=MaxPlayers,json=maxPlayers" json:"MaxPlayers,omitempty"`
	PlayerCount         *uint32 `protobuf:"varint,5,req,name=PlayerCount,json=playerCount" json:"PlayerCount,omitempty"`
	TickRate            *uint32 `protobuf:"varint,6,req,name=TickRate,json=tickRate" json:"TickRate,omitempty"`
	FrameLookbackLength *uint32 `protobuf:"varint,7,req,name=FrameLookbackLength,json=frameLookbackLength" json:"FrameLookbackLength,omitempty"`
	PlayerKickTimeout   *uint32 `protobuf:"varint,8,req,name=PlayerKickTimeout,json=playerKickTimeout" json:"PlayerKickTimeout,omitempty"`
	LatCoordinate       *uint64 `protobuf:"varint,9,req,name=LatCoordinate,json=latCoordinate" json:"LatCoordinate,omitempty"`
	LongCoordinate      *uint64 `protobuf:"varint,10,req,name=LongCoordinate,json=longCoordinate" json:"LongCoordinate,omitempty"`
	LatSize             *uint64 `protobuf:"varint,11,req,name=LatSize,json=latSize" json:"LatSize,omitempty"`
	LongSize            *uint64 `protobuf:"varint,12,req,name=LongSize,json=longSize" json:"LongSize,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *ServerInfo) GetServerId() string {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return ""
}

func (m *ServerInfo) GetServerName() string {
	if m != nil && m.ServerName != nil {
		return *m.ServerName
	}
	return ""
}

func (m *ServerInfo) GetServerRegion() string {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return ""
}

func (m *ServerInfo) GetMaxPlayers() uint32 {
	if m != nil && m.MaxPlayers != nil {
		return *m.MaxPlayers
	}
	return 0
}

func (m *ServerInfo) GetPlayerCount() uint32 {
	if m != nil && m.PlayerCount != nil {
		return *m.PlayerCount
	}
	return 0
}

func (m *ServerInfo) GetTickRate() uint32 {
	if m != nil && m.TickRate != nil {
		return *m.TickRate
	}
	return 0
}

func (m *ServerInfo) GetFrameLookbackLength() uint32 {
	if m != nil && m.FrameLookbackLength != nil {
		return *m.FrameLookbackLength
	}
	return 0
}

func (m *ServerInfo) GetPlayerKickTimeout() uint32 {
	if m != nil && m.PlayerKickTimeout != nil {
		return *m.PlayerKickTimeout
	}
	return 0
}

func (m *ServerInfo) GetLatCoordinate() uint64 {
	if m != nil && m.LatCoordinate != nil {
		return *m.LatCoordinate
	}
	return 0
}

func (m *ServerInfo) GetLongCoordinate() uint64 {
	if m != nil && m.LongCoordinate != nil {
		return *m.LongCoordinate
	}
	return 0
}

func (m *ServerInfo) GetLatSize() uint64 {
	if m != nil && m.LatSize != nil {
		return *m.LatSize
	}
	return 0
}

func (m *ServerInfo) GetLongSize() uint64 {
	if m != nil && m.LongSize != nil {
		return *m.LongSize
	}
	return 0
}

func init() {
	proto.RegisterType((*ServerInfo)(nil), "spacecluster.ServerInfo")
}

var fileDescriptor4 = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x8f, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x71, 0x9b, 0xae, 0x3b, 0x6d, 0x87, 0xcb, 0x6e, 0x82, 0x17, 0x32, 0x86, 0x88, 0x17,
	0x22, 0xbe, 0xc3, 0x40, 0x10, 0xab, 0x48, 0xb7, 0x17, 0x88, 0xdd, 0x59, 0x2d, 0x4d, 0x73, 0x4a,
	0x92, 0x8a, 0xfa, 0x50, 0x3e, 0xa3, 0x6d, 0x5a, 0xb7, 0xaa, 0x77, 0xfd, 0xff, 0xef, 0xe3, 0xef,
	0x09, 0x9c, 0xae, 0x51, 0xbf, 0xa1, 0xbe, 0x57, 0x3b, 0xba, 0x29, 0x35, 0x59, 0x62, 0x81, 0x29,
	0x45, 0x82, 0x89, 0xac, 0x8c, 0x45, 0xbd, 0xfc, 0x1a, 0x02, 0x1c, 0x14, 0x76, 0x06, 0x5e, 0x97,
	0xb6, 0xfc, 0x68, 0x31, 0xb8, 0x9a, 0xc4, 0x9e, 0xe9, 0x32, 0x3b, 0xff, 0x31, 0x9f, 0x44, 0x81,
	0x7c, 0xe0, 0x28, 0x98, 0x7d, 0xc3, 0x96, 0x10, 0xb4, 0x3c, 0xc6, 0x34, 0x23, 0xc5, 0x87, 0xce,
	0x08, 0x4c, 0xaf, 0x6b, 0x36, 0x1e, 0xc5, 0xfb, 0xb3, 0x14, 0x1f, 0xa8, 0x0d, 0x1f, 0xd5, 0x46,
	0x18, 0x43, 0xb1, 0x6f, 0xd8, 0x02, 0xfc, 0xf6, 0x73, 0x45, 0x95, 0xb2, 0xfc, 0xd8, 0x09, 0x7e,
	0x79, 0xa8, 0x9a, 0x0b, 0x37, 0x59, 0x92, 0xc7, 0xc2, 0x22, 0x3f, 0x71, 0xd8, 0xb3, 0x5d, 0x66,
	0xb7, 0x30, 0xbf, 0xd3, 0xf5, 0x29, 0x11, 0x51, 0xfe, 0x22, 0x92, 0x3c, 0x42, 0x95, 0xda, 0x57,
	0x3e, 0x76, 0xda, 0x7c, 0xf7, 0x1f, 0xb1, 0x6b, 0x98, 0xb5, 0xff, 0x7b, 0xa8, 0x37, 0x36, 0x59,
	0x81, 0x54, 0x59, 0xee, 0x39, 0x7f, 0x56, 0xfe, 0x05, 0xec, 0x02, 0xc2, 0x48, 0xd8, 0x15, 0x91,
	0xde, 0x66, 0xaa, 0x39, 0x60, 0x52, 0x9b, 0xa3, 0x38, 0x94, 0xfd, 0x92, 0x5d, 0xc2, 0x34, 0x22,
	0x95, 0xf6, 0x34, 0x70, 0xda, 0x54, 0xfe, 0x6a, 0x19, 0x87, 0x71, 0xbd, 0xb6, 0xce, 0x3e, 0x91,
	0xfb, 0x4e, 0x18, 0xcb, 0x36, 0x36, 0x6f, 0x6c, 0x16, 0x1c, 0x0a, 0x1c, 0xf2, 0x64, 0x97, 0xbf,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x79, 0xc4, 0x7a, 0xdb, 0xd1, 0x01, 0x00, 0x00,
}
